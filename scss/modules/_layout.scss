/*	-----------------------
	Layout (Grid and other)
*/

@mixin column($width) {
	float:left;
	padding:($grid-gutter/2);
	width:$width;
}
@mixin resetColumn {
	float:none;
	padding:($grid-gutter/2)*0.75;
	width:auto;
}

.grid:after,
.row:after {
	@include clearfixed;
}

// Universal grid
@for $i from 1 through $grid-columns {
	.g#{$i} {
		@include column(percentage($i/$grid-columns));
	}
	// @for $i from 1 through $grid-columns {
	// 	.push#{$i} {
	// 		position:relative;
	// 		left:percentage($i/$grid-columns);
	// 	}
	// }
	// @for $i from 1 through $grid-columns {
	// 	.pull#{$i} {
	// 		position:relative;
	// 		left:-(percentage($i/$grid-columns));
	// 	}
	// }
}
// Reset universal grid at small res
@media only screen and (max-width:$breakpoint-sm) {
	%greset {
		@include resetColumn;
	}
	@for $i from 1 through $grid-columns {
		.g#{$i} {
			@extend %greset;
		}
	}
}

// Large grid
@media only screen and (min-width: $breakpoint-lg) {
	@for $i from 1 through $grid-columns {
		.gxl#{$i} {
			@include column(percentage($i/$grid-columns));
		}
	}
}

// Medium grid
@media only screen and (min-width: $breakpoint-sm) and (max-width: $breakpoint-md) {
	@for $i from 1 through $grid-columns {
		.gm#{$i} {
			@include column(percentage($i/$grid-columns));
		}
	}
}

// Small grid
@media only screen and (max-width: $breakpoint-sm) {
	@for $i from 1 through $grid-columns {
		.gs#{$i} {
			@include column(percentage($i/$grid-columns));
		}
	}
}

// Table grid
@media only screen and (min-width: $breakpoint-sm) {
	.grid-table {
		display:table;
		width:100%;
		table-layout:fixed;
		&:after {
			@include clearfixed;
		}
		%grid-cell {
			float:none;
			display:table-cell;
			vertical-align:top;
		}
		@for $i from 1 through $grid-columns {
			.g#{$i} {
				@extend %grid-cell;
			}
		}
		.grid-align-middle {
			vertical-align:middle;
		}
		.grid-align-bottom {
			vertical-align:bottom;
		}
	}
}


// Mods
.g-no-padding,
.xp {
	padding:0;
}
.g-pad,
.p {
	padding:($grid-gutter/2);
}
.g-centered,
.gc {
	clear:left;
	float:none;
	margin-left:auto;
	margin-right:auto;
}

.border-top {
	border-top:1px solid $line-color;
}
.border-bottom {
	border-bottom:1px solid $line-color;
}

.g-border-right {
	border-right:1px solid $line-color;
}
.g-border-left {
	border-left:1px solid $line-color;
}
@media only screen and (max-width:$breakpoint-sm) {
	.g-border-right {
		border-right:0;
		border-bottom:1px solid $line-color;
	}
	.g-border-left {
		border-left:0;
		border-top:1px solid $line-color;
	}
}

// Non-grid layout
.listed {
	margin-bottom:($font-scale * 2) + em;
}

/* Utility */
.clearfix:after {
	@include clearfixed;
}
.clear {
	clear:both;
}
